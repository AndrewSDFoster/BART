[MCMC]
# Location of the output directory:
loc_dir = ./outputs

# Location of the TEA directory (comment out to use default submodule):
#location_TEA = ../modules/TEA/

# Tepfile name:
tep_name = /home/.../BART/inputs/tep/HD209458b.tep

# Kurucz stellar spectrum file:
kurucz   = /home/.../BART/inputs/kurucz/fp00ak2odfnew.pck


# Atmospheric pressure layers: :::::::::::::::::::::::::::::::::::::::
# Pressure filename (.pres extenesion):
press_file = 100layers.pres

# Number of layers:
n_layers = 100

# Pressure at the top of the atmosphere (in bars):
p_top    = 1e-5

# Pressure at the bottom of the atmosphere (in bars):
p_bottom = 100.0

# Use log (True) or linear (False) pressure scale:
log = True


# Elemental-abundances file ::::::::::::::::::::::::::::::::::::::::::
# Basic elemental abundances file:
abun_basic = /home/.../BART/inputs/abundances_Asplund2009.txt
# FINDME: in TEA.cfg this parameter is named abun_file.

# Multiplication factor for heavy-element abundances:
solar_times = 1
    
# Swap C/O abundance ratio (True) or not (False):
COswap = False

# Elemental abundances file name (.abn extension):
abun_file = solar1x.abn 


# Temperature profile ::::::::::::::::::::::::::::::::::::::::::::::::
# Choose PT parameters from the range given
# (1    , 5    )
p3      =  3.
# (0.1  , 0.01 )
p1      =  0.05
# (0.19 , 0.21 )
a2      =  0.2
# (0.99 , 0.999) 
a1      =  0.993
# (1    , 1.5  )
T3_fac  =  1.2 


# Atmospheric Elemental Abundances (pre-atmospheric) File ::::::::::::
# Pre atmospheric filename (.atm extenstion):
preatm_file = TEA_preatm.atm

# Elemental species:
in_elem  = H He C N O

# Output species:
#   - MUST use names produced by JANAF.py
#   - see TEA/conversion-record-sort.txt for the correct names
#   - MUST include all elemental species
out_spec = H_g He_ref C_g N_g O_g H2_ref CO_g CO2_g CH4_g H2O_g NH3_g C2H2_g C2H4_g


# Atmospheric File (P, T, species-abundances) ::::::::::::::::::::::::
# TEA output file (the 'atmospheric file') name:
atmfile = TEA_atm.tea


# MCMC arguments :::::::::::::::::::::::::::::::::::::::::::::::::::::
# The data (eclipse or transit depths):
data   = 0.00119  0.00123
# Data uncertainties:
uncert = 0.00007  0.00006

# The wavebands:
filter   = /home/.../BART/inputs/filters/spitzer_irac1_fa.dat
           /home/.../BART/inputs/filters/spitzer_irac2_fa.dat

# The fitting function (3-element tuple with function name, module name,
#  and path to module):
# (Absolute path or relative path from loc_dir)
func = hack BARTfunc ../../code/
# FINDME: Use default

# List of molecules being fit:
molfit = H2O CO2 CO CH4

# The model fitting parameters:
# The Mi parameters are the log10 of an abundance scale factor:
#          a1     a2     P1      P2    P3     T3     M1   M2   M3   M4  ...
params   = 0.993  0.2    0.05   -1.0   3.0   1719.8  0.0 -5.0 -5.0 -5.0
pmin     = 0.5    0.1    0.01   -2.0   0.1    500.0 -5.0 -6.0 -6.0 -6.0
pmax     = 2.0    1.0    0.5     1.0  10.0   3000.0  1.0  1.0  1.0  1.0
stepsize = 0.0    0.00   0.00    0.0   0.0      0.0  0.1  0.0  0.0  0.0

# Total number of MCMC samples (burn-in + final MCMC):
numit       = 1e5
# Number of parallel MCMC chains (= number of processors):
nchains     = 10
# Number of burn-in iterations per chain:
burnin      = 500
# MCMC algorithm ('demc' for Differential Evolution or 'mrw' for 
#  Metropolis Random Walk with Gaussian proposals):
walk        = demc
# Perform a least-square fit before the MCMC:
leastsq     = False
# Scale data uncertainties to enforce reduced chi-square == 1:
chisqiscale = False
# Perform the Gelman-Rubin convergence test along the MCMC:
grtest      = True
# Use MPI for parallel processing:
mpi         = True
# Filename to store the model fit for each MCMC evaluation:
savemodel   = band_eclipse.npy
# Make plots:
plots       = True

# Verbosity level (0--20):
verb = 11

# Transit variables ::::::::::::::::::::::::::::::::::::::::::::::::::
# Output transit configuration file name:
config  = config_transit.cfg

# Transit line information (TLI) file:
linedb = /home/.../lines/lineread-0-30.v4.tli
# Collision induced absorption file:
cia    = /home/.../CIA/h2h2.dat
# Molecular info file:
molfile = /home/.../BART/modules/transit/inputs/molecules.dat

# Spectrum's lower wavelength boundary:
wllow   =  2.8
# Spectrum's higher wavelength boundary:
wlhigh  = 11.0
# Wavelength unit conversion to cm (default: 1e-4, microns):
wlfct   = 1e-4
# Wavenumber sampling interval:
wndelt  = 1.0
# Wavenumber oversampling factor:
wnosamp = 2160
# Wavenumber unit conversion to cm-1 (default: 1.0, inverse centimeters):
wnfct = 1.0

# Eclipe or transit observing geometry:
solutiontype = transit

# Maximum optical depth to calculate:
toomuch = 10.0
# Number of HWHM
nwidth = 20

# Opacity lines' strength threshold:
ethreshold = 1eâˆ’6

# Opacity-grid temperature lower boundary (in Kelvin):
tlow   =  500
# Opacity-grid temperature higher boundary (in Kelvin):
thigh  = 3000
# Opacity-grid temperature sampling interval (in Kelvin):
temp-delt = 100
# Opacity-grid file name:
opacityfile = ./opacity_irac.dat

# Output spectrum file name:
output     = ./transit_out.dat
# Output file with the radius where the optical depth reached toomuch:
outtoomuch = ./transit_toom.dat
# Output file with the samplings info:
outsample  = ./transit_samp.dat

